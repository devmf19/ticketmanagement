name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Run unit tests with Maven
        run: mvn test

      - name: Generate JaCoCo coverage report
        run: mvn jacoco:report

      - name: Verify code coverage
        run: |
          COVERAGE=$(awk -F, '/LINE/{print $4}' target/site/jacoco/jacoco.csv | tr -d '%')
          if [ "$COVERAGE" -lt 20 ]; then
            echo "Code coverage is below 20%: $COVERAGE%"
            exit 1
          else
            echo "Code coverage is sufficient: $COVERAGE%"
          fi

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Docker
        run: gcloud auth configure-docker

      - name: Build JAR file with Maven
        run: mvn clean package -DskipTests

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/ticket-management-to-cluster:${{ github.sha }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/ticket-management-to-cluster:${{ github.sha }}

      - name: Configure kubectl
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: cluster-1
          location: us-central1-c
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
        env:
          IMAGE_TAG: gcr.io/${{ secrets.GCP_PROJECT_ID }}/ticket-management-to-cluster:${{ github.sha }}